* Write a manual of assumption we make about the videos in order to track everything
* Gather more statistics about why certain parts of the algorithm failed
* Refine the centerline by moving the points more toward the actual center
	- this could be done by segmenting the current centerline in equally spaced segments
	- each inner point on this center line can be put at the midpoint between the outlines
		to prevent problems, the point should be displaced by at most 0.5*burrow_width
	- Alternatively, find centerline by using active snake guided by current centerline and distance map
* Use images of final burrow cast to locate burrows (by analyzing the video in reverse)
* Pass2:
* Pass3:
* Pass4:
	- connect two burrows that face each other (which happens for burrows with two exits) 
* Combine burrow.py and burrow2.py -- use burrow2.py as base
* Determine absolute times by checking when the lights go on
    - this does only seem to be visible outside the cage
    - scan full video (all four quadrants) and determine mean intensity over time to estimate when the lights go on
 

Performance improvements:
-------------------------
* Make sure that images and masks are not copied to often (rather use internal cache structures, which should be faster)
	- Do operations in place as often as possible
* Generally cache all kernels for morphological operations, since these are costly to make
* Performance is limited by reading the video using ffmpeg (which is capped at about 50 fps)


Low priority enhancements:
--------------------------